Future Projects:

  Take a LLM/OpenAI API based scraper (which I already made in 2024), and make a game out of it that can be ran client-side (for github pages :) ).
    -User inserts a url to a website (eventually develop a method for random websites. This can be done via OpenAI api(via maybe the Wikipedia, ask it to find a random wiki page to use) or through maybe a CSV file with a bunch of websites listed)
        -data extracted: site, every single visible word that can be extracted, and maybe website purpose for future games/'rounds'.
    -LLM(AI) selects a (pseudo)random word from the scraped words.
    -User guesses from words they can see on the website, and the AI says correct or not
        -5 guesses total. after each guess, AI gives a hint. IE: 5 letters long, contains an 'X', contains an 'X' in the 3rd letter slot, word is synonymous with....., ETC -many options here,
    -User plays until they lose or get it right, then start again.


  Tic-Tac-Toe (TTT)
      -versus pseudo-random python code. I want to learn how to use Pyodide with Github Pages.
      -versus an AI. Once the other tic tac toe is developed, this will be relatively easy. This may be self hosted through MAMPS instead maybe for mySQL usage. I would love to use this as an opportunity to better understand data mining from users. 
            -I would like to collect innocent/harmless user data(previous game data from both TTT and the website game) and have AI use methodologies with that data in order to attempt to win TTT. compare this to the pseudo random winrate.
